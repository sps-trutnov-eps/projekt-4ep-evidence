@using EvidenceProject.Controllers.ActionData
@{
    ViewData["Title"] = "Vytvoření projektu";
    ViewData["Page"] = "create";
    ViewData["Script"] = new[]{"project/create.js", "project/common.js"};
}
@model GETProjectCreate
<div class="projectCreateItem">
  <h2>Vytvoření projektu</h2>
  <form action="/project/create" method="post" enctype="multipart/form-data">
      <label for="projectName">Název projektu: </label>
      <input name="projectName" type="text" placeholder="..." id="name" value="@Model.CurrentProject?.name" required/>
      <label for="description">Popis projektu</label>
      <textarea name="description" value="@Model.CurrentProject?.projectDescription"></textarea>
      <label for="users">Vedoucí: </label>
      <input name="projectManager" type="text" placeholder="..." list="users" required/>
      <label>Lidé: </label>
      <div id="assignees">
            <input name="assignees" class="1" type="text" placeholder="..."  onchange="addNewAssignee(event,1)" list="users"/>
      </div>
      <label for="state">Stav: </label>
      @*<input name="projectState" onchange="veci(event, 'stavit')" list="stavy" id="state" required />*@
      <select name="stavit" id="state" required>
            <option selected hidden></option>
          @foreach(DialCode dial in Model?.DialCodes?.Where(d => d.dialInfo.name == "Stav") ?? new List<DialCode>())
          {
              <option>@dial.name</option>
          }
      </select>
      <label for="type">Typ: </label>
      @*<input name="projectType" onchange="veci(event, 'typy')" list="stavy" id="type" />*@
      <select name="typy" id="state" required>
          @foreach(DialCode dial in Model?.DialCodes?.Where(d => d.dialInfo.name == "Typ") ?? new List<DialCode>())
          {
              <option>@dial.name</option>
          }
      </select>
      <label for="technology">Technologie: </label>
      <input name="projectTechnology" onchange="veci(event, 'tech')" list="stavy" id="technology" />
      <label for="photos">Fotografie: </label>
      <input name="photos" type="file" multiple="multiple" />
      <p id="nazvy"></p>
      <label for="achievements">Úspěchy: </label>
      <input name="achievements" type="text" id="achievements" placeholder="Úspěchy se dělí středníkem (;)" />
      <label for="slack">Slack: </label>
      <input name="slack" type="text" id="slack"  value="@Model.CurrentProject?.slack" />
      <label for="github">Github: </label>
      <input name="github" type="text" id="github" value="@Model.CurrentProject?.github" />
      <input type="submit"/>
      @if (Model == null) return;
          @await Html.PartialAsync("../Shared/CategoriesPV", model: Model.DialInfos)

      <datalist id="dialCodes">
          @{
              if (Model.DialCodes == null) return;
              foreach (var dialcode in Model.DialCodes)
              {
                    <option class="@dialcode.dialInfo.name">@dialcode.name</option>
              }
          }
      </datalist>
      <datalist id="users">
          @{
              if (Model.Users == null) return;
              foreach (var user in Model.Users)
              {
                    <option>@user.fullName</option>
              }
          }
      </datalist>
  </form>
</div>
@await Html.PartialAsync("../Shared/DialCodesPV", new Tuple<List<DialInfo>, List<DialCode>> (Model.DialInfos, Model.DialCodes))
@await Html.PartialAsync("../Shared/DialInfosPV", Model.DialInfos)
@await Html.PartialAsync("../Shared/ToxicPopupPV", Model.Response)